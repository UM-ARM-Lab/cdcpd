<launch>

    <arg name="use_gripper_prior"           default="False"/>
    <arg name="use_failure_recovery"        default="False"/>

    <arg name="use_passingthru_constraint"  default="False"/>
    <arg name="visualize_violations"        default="False"/>
    <arg name="use_pickle"                  default="False"/>
    <arg name="pov"                         default="victor_head"/>
    <arg name="kinect_name"                 value="kinect2_$(arg kinect)"/>

    <arg name="intermediary_topic" value="$(arg kinect_name)/qhd/projected"/>
    <node name="project_to_table" pkg="cdcpd" type="project_to_table" required="true">
        <param name="source_cloud_topic"           value="$(arg kinect_name)/qhd/points"        type="string" />
        <param name="intermediary_topic"           value="$(arg intermediary_topic)"            type="string" />
    </node>

    <group ns="cdcpd_node">
        <param name="input_cloud_topic"            value="$(arg intermediary_topic)"            type="string" />
    	<param name="use_gripper_prior"            value="$(arg use_gripper_prior)"             type="bool" />
        <param name="use_pickle"                   value="$(arg use_pickle)"                    type="bool" />
    	<param name="use_failure_recovery"         value="$(arg use_failure_recovery)"          type="bool" />
        <param name="use_passingthru_constraint"   value="$(arg use_passingthru_constraint)"    type="bool" />
        <param name="visualize_violations"         value="$(arg visualize_violations)"          type="bool" />
    </group>
    <node name="cdcpd_node" pkg="cdcpd" type="cdcpd_env.sh" required="true"/>

    <node name="downsampling" pkg="cdcpd" type="pcl_filtering" required="true"/>

    <node name="gripper_node" pkg="cdcpd" type="gripper_tf_node.py" if="$(arg use_gripper_prior)" required="true">
        <param name="kinect_frame" value="$(arg kinect_name)_rgb_optical_frame" type="string"/>
    </node>

</launch>
